{"version":3,"sources":["webpack:///src/app/testupload/testupload.page.html","webpack:///src/app/testupload/testupload-routing.module.ts","webpack:///src/app/testupload/testupload.module.ts","webpack:///src/app/testupload/testupload.page.scss","webpack:///src/app/testupload/testupload.page.ts"],"names":["routes","path","component","TestuploadPageRoutingModule","imports","forChild","exports","TestuploadPageModule","declarations","STORAGE_KEY","TestuploadPage","api","camera","file","http","webview","actionSheetController","toastController","storage","plt","loadingController","ref","filePath","images","ready","then","loadStoredImages","get","arr","JSON","parse","img","dataDirectory","resPath","pathForImage","push","name","converted","convertFileSrc","text","create","message","position","duration","toast","present","header","buttons","handler","takePicture","PictureSourceType","PHOTOLIBRARY","CAMERA","role","actionSheet","sourceType","options","quality","saveToPhotoAlbum","correctOrientation","getPicture","imagePath","is","resolveNativePath","correctPath","substr","lastIndexOf","currentName","substring","copyFileToLocalDir","createFileName","d","Date","n","getTime","newFileName","namePath","copyFile","success","updateStoredImages","error","presentToast","newImages","set","stringify","newEntry","detectChanges","imgEntry","splice","filtered","filter","removeFile","res","selector","template"],"mappings":"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","file":"testupload-testupload-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Ionic Image Upload\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content padding>\\n  <h3 *ngIf=\\\"images.length == 0\\\" text-center>Please Select Image!</h3>\\n \\n  <ion-list>\\n    <ion-item *ngFor=\\\"let img of images; index as pos\\\" text-wrap>\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"img.path\\\"></ion-img>\\n      </ion-thumbnail>\\n      <ion-label>\\n        {{ img.name }}\\n      </ion-label>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"startUpload(img)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-upload\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"deleteImage(img, pos)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button fill=\\\"clear\\\" expand=\\\"full\\\" color=\\\"light\\\" (click)=\\\"selectImage()\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\n      Select Image</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestuploadPage } from './testupload.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestuploadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestuploadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestuploadPageRoutingModule } from './testupload-routing.module';\n\nimport { TestuploadPage } from './testupload.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TestuploadPageRoutingModule\n  ],\n  declarations: [TestuploadPage]\n})\nexport class TestuploadPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3R1cGxvYWQvdGVzdHVwbG9hZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { Storage } from '@ionic/storage';\n\nimport { ActionSheetController, ToastController, Platform, LoadingController } from '@ionic/angular';\nimport { Camera, CameraOptions, PictureSourceType } from '@ionic-native/Camera/ngx';\nimport { File, FileEntry } from '@ionic-native/File/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\n\nconst STORAGE_KEY = 'my_images';\n\n@Component({\n  selector: 'app-testupload',\n  templateUrl: './testupload.page.html',\n  styleUrls: ['./testupload.page.scss'],\n})\nexport class TestuploadPage implements OnInit {\n  images = [];\n  constructor(public api:RestApiService,private camera: Camera, private file: File, private http: HttpClient, private webview: WebView,\n    private actionSheetController: ActionSheetController, private toastController: ToastController,\n    private storage: Storage, private plt: Platform, private loadingController: LoadingController,\n    private ref: ChangeDetectorRef, private filePath: FilePath) { }\n\n  ngOnInit() {\n    this.plt.ready().then(() => {\n      this.loadStoredImages();\n    });\n  }\n  loadStoredImages() {\n    this.storage.get(STORAGE_KEY).then(images => {\n      if (images) {\n        let arr = JSON.parse(images);\n        this.images = [];\n        for (let img of arr) {\n          let filePath = this.file.dataDirectory + img;\n          let resPath = this.pathForImage(filePath);\n          this.images.push({ name: img, path: resPath, filePath: filePath });\n        }\n      }\n    });\n  }\n \n  pathForImage(img) {\n    if (img === null) {\n      return '';\n    } else {\n      let converted = this.webview.convertFileSrc(img);\n      return converted;\n    }\n  }\n \n  async presentToast(text) {\n    const toast = await this.toastController.create({\n        message: text,\n        position: 'bottom',\n        duration: 3000\n    });\n    toast.present();\n  }\n\n  async selectImage() {\n    const actionSheet = await this.actionSheetController.create({\n        header: \"Select Image source\",\n        buttons: [{\n                text: 'Load from Library',\n                handler: () => {\n                    this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY);\n                }\n            },\n            {\n                text: 'Use Camera',\n                handler: () => {\n                    this.takePicture(this.camera.PictureSourceType.CAMERA);\n                }\n            },\n            {\n                text: 'Cancel',\n                role: 'cancel'\n            }\n        ]\n    });\n    await actionSheet.present();\n  }\n  takePicture(sourceType: PictureSourceType) {\n    var options: CameraOptions = {\n        quality: 100,\n        sourceType: sourceType,\n        saveToPhotoAlbum: false,\n        correctOrientation: true\n    };\n \n    this.camera.getPicture(options).then(imagePath => {\n        if (this.plt.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\n            this.filePath.resolveNativePath(imagePath)\n                .then(filePath => {\n                    let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n                    let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\n                    this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n                });\n        } else {\n            var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\n            var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\n            this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n        }\n    });\n \n  }\n  createFileName() {\n    var d = new Date(),\n        n = d.getTime(),\n        newFileName = n + \".jpg\";\n    return newFileName;\n  }\n \n  copyFileToLocalDir(namePath, currentName, newFileName) {\n      this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\n          this.updateStoredImages(newFileName);\n      }, error => {\n          this.presentToast('Error while storing file.');\n      });\n  }\n \n  updateStoredImages(name) {\n      this.storage.get(STORAGE_KEY).then(images => {\n          let arr = JSON.parse(images);\n          if (!arr) {\n              let newImages = [name];\n              this.storage.set(STORAGE_KEY, JSON.stringify(newImages));\n          } else {\n              arr.push(name);\n              this.storage.set(STORAGE_KEY, JSON.stringify(arr));\n          }\n   \n          let filePath = this.file.dataDirectory + name;\n          let resPath = this.pathForImage(filePath);\n   \n          let newEntry = {\n              name: name,\n              path: resPath,\n              filePath: filePath\n          };\n   \n          this.images = [newEntry, ...this.images];\n          this.ref.detectChanges(); // trigger change detection cycle\n      });\n  }\n  deleteImage(imgEntry, position) {\n    this.images.splice(position, 1);\n \n    this.storage.get(STORAGE_KEY).then(images => {\n        let arr = JSON.parse(images);\n        let filtered = arr.filter(name => name != imgEntry.name);\n        this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\n \n        var correctPath = imgEntry.filePath.substr(0, imgEntry.filePath.lastIndexOf('/') + 1);\n \n        this.file.removeFile(correctPath, imgEntry.name).then(res => {\n            this.presentToast('File removed.');\n        });\n    });\n  }\n}\n"]}