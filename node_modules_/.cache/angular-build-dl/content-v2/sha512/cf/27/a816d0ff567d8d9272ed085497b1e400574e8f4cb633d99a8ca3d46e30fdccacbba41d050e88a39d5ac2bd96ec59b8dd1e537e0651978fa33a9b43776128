{"version":3,"sources":["./src/app/testupload/testupload.page.html","./src/app/testupload/testupload-routing.module.ts","./src/app/testupload/testupload.module.ts","./src/app/testupload/testupload.page.scss","./src/app/testupload/testupload.page.ts"],"names":[],"mappings":"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","file":"testupload-testupload-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Ionic Image Upload\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content padding>\\n  <h3 *ngIf=\\\"images.length == 0\\\" text-center>Please Select Image!</h3>\\n \\n  <ion-list>\\n    <ion-item *ngFor=\\\"let img of images; index as pos\\\" text-wrap>\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"img.path\\\"></ion-img>\\n      </ion-thumbnail>\\n      <ion-label>\\n        {{ img.name }}\\n      </ion-label>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"startUpload(img)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-upload\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"deleteImage(img, pos)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n \\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button fill=\\\"clear\\\" expand=\\\"full\\\" color=\\\"light\\\" (click)=\\\"selectImage()\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\n      Select Image</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestuploadPage } from './testupload.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestuploadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestuploadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestuploadPageRoutingModule } from './testupload-routing.module';\n\nimport { TestuploadPage } from './testupload.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TestuploadPageRoutingModule\n  ],\n  declarations: [TestuploadPage]\n})\nexport class TestuploadPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3R1cGxvYWQvdGVzdHVwbG9hZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { Storage } from '@ionic/storage';\n\nimport { ActionSheetController, ToastController, Platform, LoadingController } from '@ionic/angular';\nimport { Camera, CameraOptions, PictureSourceType } from '@ionic-native/Camera/ngx';\nimport { File, FileEntry } from '@ionic-native/File/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\n\nconst STORAGE_KEY = 'my_images';\n\n@Component({\n  selector: 'app-testupload',\n  templateUrl: './testupload.page.html',\n  styleUrls: ['./testupload.page.scss'],\n})\nexport class TestuploadPage implements OnInit {\n  images = [];\n  constructor(public api:RestApiService,private camera: Camera, private file: File, private http: HttpClient, private webview: WebView,\n    private actionSheetController: ActionSheetController, private toastController: ToastController,\n    private storage: Storage, private plt: Platform, private loadingController: LoadingController,\n    private ref: ChangeDetectorRef, private filePath: FilePath) { }\n\n  ngOnInit() {\n    this.plt.ready().then(() => {\n      this.loadStoredImages();\n    });\n  }\n  loadStoredImages() {\n    this.storage.get(STORAGE_KEY).then(images => {\n      if (images) {\n        let arr = JSON.parse(images);\n        this.images = [];\n        for (let img of arr) {\n          let filePath = this.file.dataDirectory + img;\n          let resPath = this.pathForImage(filePath);\n          this.images.push({ name: img, path: resPath, filePath: filePath });\n        }\n      }\n    });\n  }\n \n  pathForImage(img) {\n    if (img === null) {\n      return '';\n    } else {\n      let converted = this.webview.convertFileSrc(img);\n      return converted;\n    }\n  }\n \n  async presentToast(text) {\n    const toast = await this.toastController.create({\n        message: text,\n        position: 'bottom',\n        duration: 3000\n    });\n    toast.present();\n  }\n\n  async selectImage() {\n    const actionSheet = await this.actionSheetController.create({\n        header: \"Select Image source\",\n        buttons: [{\n                text: 'Load from Library',\n                handler: () => {\n                    this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY);\n                }\n            },\n            {\n                text: 'Use Camera',\n                handler: () => {\n                    this.takePicture(this.camera.PictureSourceType.CAMERA);\n                }\n            },\n            {\n                text: 'Cancel',\n                role: 'cancel'\n            }\n        ]\n    });\n    await actionSheet.present();\n  }\n  takePicture(sourceType: PictureSourceType) {\n    var options: CameraOptions = {\n        quality: 100,\n        sourceType: sourceType,\n        saveToPhotoAlbum: false,\n        correctOrientation: true\n    };\n \n    this.camera.getPicture(options).then(imagePath => {\n        if (this.plt.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\n            this.filePath.resolveNativePath(imagePath)\n                .then(filePath => {\n                    let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n                    let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\n                    this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n                });\n        } else {\n            var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\n            var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\n            this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n        }\n    });\n \n  }\n  createFileName() {\n    var d = new Date(),\n        n = d.getTime(),\n        newFileName = n + \".jpg\";\n    return newFileName;\n  }\n \n  copyFileToLocalDir(namePath, currentName, newFileName) {\n      this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\n          this.updateStoredImages(newFileName);\n      }, error => {\n          this.presentToast('Error while storing file.');\n      });\n  }\n \n  updateStoredImages(name) {\n      this.storage.get(STORAGE_KEY).then(images => {\n          let arr = JSON.parse(images);\n          if (!arr) {\n              let newImages = [name];\n              this.storage.set(STORAGE_KEY, JSON.stringify(newImages));\n          } else {\n              arr.push(name);\n              this.storage.set(STORAGE_KEY, JSON.stringify(arr));\n          }\n   \n          let filePath = this.file.dataDirectory + name;\n          let resPath = this.pathForImage(filePath);\n   \n          let newEntry = {\n              name: name,\n              path: resPath,\n              filePath: filePath\n          };\n   \n          this.images = [newEntry, ...this.images];\n          this.ref.detectChanges(); // trigger change detection cycle\n      });\n  }\n  deleteImage(imgEntry, position) {\n    this.images.splice(position, 1);\n \n    this.storage.get(STORAGE_KEY).then(images => {\n        let arr = JSON.parse(images);\n        let filtered = arr.filter(name => name != imgEntry.name);\n        this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\n \n        var correctPath = imgEntry.filePath.substr(0, imgEntry.filePath.lastIndexOf('/') + 1);\n \n        this.file.removeFile(correctPath, imgEntry.name).then(res => {\n            this.presentToast('File removed.');\n        });\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}