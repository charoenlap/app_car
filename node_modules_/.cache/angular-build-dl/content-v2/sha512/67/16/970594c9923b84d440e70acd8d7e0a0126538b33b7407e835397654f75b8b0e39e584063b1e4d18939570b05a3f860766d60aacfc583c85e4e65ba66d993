{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0hBAA2d,gBAAgB,+hBAA+hB,gBAAgB,oqBAAoqB,E;;;;;;;;;;;;;;;;;;;ACApqD;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4EAAsB;SACvB;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;ACnB5B;AAAe,uEAAQ,qBAAqB,GAAG,YAAY,2BAA2B,wBAAwB,6BAA6B,GAAG,gBAAgB,wBAAwB,GAAG,6CAA6C,+hBAA+hB,E;;;;;;;;;;;;;;;;;;;;ACAntB;AACG;AACZ;AACgB;IAa5C,SAAS,SAAT,SAAS;IAMpB,YAAmB,GAAmB,EAAS,OAAgB,EAAQ,KAAa;QAAjE,QAAG,GAAH,GAAG,CAAgB;QAAS,YAAO,GAAP,OAAO,CAAS;QAAQ,UAAK,GAAL,KAAK,CAAQ;QAClF,IAAI,CAAC,SAAS,GAAG;YACf,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,IAAQ;QACZ,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAC,YAAY,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChG,GAAG,GAAE;YACH,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,SAAS,EAAC;gBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,EAAE;oBAC7D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EAAC,GAAG,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;CAoDF;;YAjGQ,gEAAc;YACd,sDAAO;YACS,sDAAM;;AAalB,SAAS;IANrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,iNAAgC;;KAEjC,CAAC;GAEW,SAAS,CAkFrB;AAlFqB","file":"login-login-module-es2015.js","sourcesContent":["export default \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"theme\\\">\\n    <ion-title>เข้าสู่ระบบ</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-content color=\\\"light\\\">\\n\\t<!-- <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" >\\n\\t\\t<ion-card class=\\\"mt-5\\\">\\n\\t\\t  <ion-card-content>\\n\\t\\t   \\t<ion-input name=\\\"username\\\" class=\\\"input\\\" placeholder=\\\"Username\\\"></ion-input>\\n\\t\\t    <ion-input name=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"Password\\\"></ion-input>\\n\\t\\t   \\t<div>{{ status_login }}</div>\\n\\t\\t    <ion-button color=\\\"theme\\\" type=\\\"submit\\\"  [disabled]=\\\"form.invalid\\\">Login</ion-button>\\n\\t\\t  </ion-card-content>\\n\\t\\t</ion-card>\\n\\t</form> -->\\n\\t<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login(form)\\\" >\\n\\t\\t<ion-card class=\\\"mt-5\\\">\\n\\t\\t  <ion-card-content>\\n\\t\\t   \\t<ion-input [(ngModel)]=\\\"login.username\\\" name=\\\"username\\\" class=\\\"input\\\" placeholder=\\\"Username\\\"></ion-input>\\n\\t\\t    <ion-input [(ngModel)]=\\\"login.password\\\" name=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"Password\\\"></ion-input>\\n\\t\\t   \\t<div>{{ status_login }}</div>\\n\\t\\t    <ion-button color=\\\"theme\\\" type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"btn-login\\\">Login</ion-button>\\n\\t\\t  </ion-card-content>\\n\\t\\t</ion-card>\\n\\t</form>\\n\\t<ion-grid>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t<ion-button color=\\\"theme\\\" expand=\\\"block\\\" routerLink=\\\"/register\\\"><ion-icon name=\\\"person-outline\\\"></ion-icon> สมัครสมาชิกทั่วไป</ion-button>\\n\\t\\t\\t</ion-col>\\n\\t\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t<ion-button color=\\\"primary\\\" expand=\\\"block\\\" routerLink=\\\"/register-company\\\"><ion-icon name=\\\"car-sport-outline\\\"></ion-icon> สมัครสมาชิกสำหรับเต็นท์รถ</ion-button>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t</ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".mt-5 {\\n  margin-top: 3rem;\\n}\\n\\n.input {\\n  border: 1px solid #eee;\\n  margin-bottom: 20px;\\n  padding: 10px !important;\\n}\\n\\n.btn-login {\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsZ0JBQUE7QUFDRDs7QUFDQTtFQUNDLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSx3QkFBQTtBQUVEOztBQUNBO0VBQ0MsbUJBQUE7QUFFRCIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdC01IHtcblx0bWFyZ2luLXRvcDogM3JlbTtcbn1cbi5pbnB1dCB7XG5cdGJvcmRlcjogMXB4IHNvbGlkICNlZWU7XG5cdG1hcmdpbi1ib3R0b206IDIwcHg7XG5cdHBhZGRpbmc6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLmJ0bi1sb2dpbiB7XG5cdG1hcmdpbi1ib3R0b206IDIwcHg7XG59ICJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { Storage } from '@ionic/storage';\nimport { ActivatedRoute, Router } from '@angular/router';\n\ninterface logIndata{\n  username:any,\n  password:any\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n  \n  loginDetail:any;\n  status_login:any;\n\n  public formlogin:logIndata;\n  constructor(public api: RestApiService,private storage: Storage,public route: Router) { \n    this.formlogin = {\n      username: '',\n      password: ''\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  login(form:any){\n    this.api.getdata('login&username='+form.value.username+'&password='+form.value.password).subscribe(\n      res=>{\n        this.loginDetail = res;\n        if(this.loginDetail.result == \"success\"){\n          this.status_login = this.loginDetail.result;\n          this.storage.set('token', this.loginDetail.token).then((data)=>{\n            this.route.navigate(['/home']);\n          });\n        }\n      },err=>{\n        console.log(err);\n      }\n    );\n  }\n  /*async login(username:string,password:string) {\n\n    // const loading = await this.loadingController.create({\n    // // content: 'Loading'\n    // });\n    // await loading.present();\n    // await \n    this.api.getdata('login&username='+username+'&password='+password).subscribe(res => {\n      // console.log(res);\n      this.loginDetail = res;\n      // console.log(this.loginDetail);\n      // loading.dismiss();\n      if(this.loginDetail.result=='success'){\n      \tthis.status_login = this.loginDetail.result\n      \t\n        this.storage.set('token', this.loginDetail.token).then((data) => {\n        \tthis.storage.set('name', this.loginDetail.name).then((data) => {\n        \t\tthis.route.navigate(['/home']);\n\t    \t});\n\t    });\n        \n\n        // this.storage.get('token')\n        // this.route.navigate(['/home']);\n\n\n        // this.storage.set('phone', this.loginDetail.phone);\n        // this.storage.set('address', this.loginDetail.address);\n        // this.storage.set('emp_key', this.loginDetail.emp_key);\n        // console.log(this.loginDetail.emp_key);\n        // this.storage.set('title', this.loginDetail.title);\n        // this.storage.set('firstname', this.loginDetail.firstname);\n        // this.storage.set('lastname', this.loginDetail.lastname);\n        // this.storage.set('nickname', this.loginDetail.nickname);\n        // return this.storage.set(TOKEN_KEY, this.loginDetail.emp_key).then(() => {\n        //   this.authenticationState.next(true);\n        // });\n      }else{\n        // this.alert();\n        // return this.storage.remove(TOKEN_KEY).then(() => {\n        //   this.authenticationState.next(false);\n        // });\n      }\n      \n    }, err => {\n      console.log(err);\n      // loading.dismiss();\n    });\n    \n  }*/\n\n}\n"],"sourceRoot":"webpack:///"}