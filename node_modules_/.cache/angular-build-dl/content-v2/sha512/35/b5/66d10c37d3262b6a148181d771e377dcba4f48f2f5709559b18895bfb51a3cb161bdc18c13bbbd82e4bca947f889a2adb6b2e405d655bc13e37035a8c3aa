{"version":3,"sources":["webpack:///src/app/buy-service/buy-service.page.html","webpack:///src/app/buy-service/buy-service-routing.module.ts","webpack:///src/app/buy-service/buy-service.module.ts","webpack:///src/app/buy-service/buy-service.page.scss","webpack:///src/app/buy-service/buy-service.page.ts"],"names":["routes","path","component","BuyServicePageRoutingModule","imports","forChild","exports","BuyServicePageModule","declarations","BuyServicePage","api","storage","route","getdata","subscribe","res","listcoin","err","console","log","coin","idcoin","form","get","then","data","token","value","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAThC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,uFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,gEAAD;AAPN,OAAT,CASgC,GAApBD,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,cAAc;AAMzB,gCAAmBC,GAAnB,EAA+CC,OAA/C,EAAuEC,KAAvE,EAAsF;AAAA;;AAAA;;AAAnE,eAAAF,GAAA,GAAAA,GAAA;AAA4B,eAAAC,OAAA,GAAAA,OAAA;AAAwB,eAAAC,KAAA,GAAAA,KAAA;AACrE,eAAKF,GAAL,CAASG,OAAT,CAAiB,qBAAjB,EAAwCC,SAAxC,CACE,UAAAC,GAAG,EAAE;AACH,iBAAI,CAACC,QAAL,GAAgBD,GAAhB,CADG,CAEH;AACD,WAJH,EAKE,UAAAE,GAAG,EAAE;AAACC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,WAL1B;AAOA,eAAKG,IAAL,GAAY;AACVC,kBAAM,EAAC;AADG,WAAZ;AAGD;;AAjBwB;AAAA;AAAA,qCAmBd,CACV;AApBwB;AAAA;AAAA,kCAqBjBC,IArBiB,EAqBT;AAAA;;AACd,iBAAKX,OAAL,CAAaY,GAAb,CAAiB,OAAjB,EAA0BC,IAA1B,CAA+B,UAACC,IAAD,EAAQ;AACrC,oBAAI,CAACC,KAAL,GAAaD,IAAb;;AACA,oBAAI,CAACf,GAAL,CAASG,OAAT,CAAiB,8BAA4B,MAAI,CAACa,KAAjC,GAAuC,MAAvC,GAA8CJ,IAAI,CAACK,KAAL,CAAWN,MAA1E,EAAkFP,SAAlF,CACE,UAAAC,GAAG,EAAE;AACHG,uBAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,eAHH,EAGI,UAAAE,GAAG,EAAE;AACLC,uBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,eALH;AAOD,aATD;AAUD;AAhCwB;;AAAA;AAAA,S;;;;gBAblB;;gBACA;;gBACgB;;;;AAWZR,oBAAc,6DAL1B,gEAAU;AACTmB,gBAAQ,EAAE,iBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,OAAV,CAK0B,GAAdpB,cAAc,CAAd","file":"buy-service-buy-service-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"theme\\\">\\n    <ion-title>ซื้อเหรียญ</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"light\\\">\\n\\t<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"buycoin(form)\\\" >\\n\\t<div class=\\\"card\\\">\\n\\t\\t<ion-list>\\n\\t\\t  <ion-radio-group value=\\\"1\\\" [(ngModel)]=\\\"coin.idcoin\\\" name=\\\"idcoin\\\">\\n\\t\\t    <ion-item *ngFor=\\\"let listscoin of listcoin\\\">\\n\\t\\t      <ion-label>{{listscoin.coin}} coin {{listscoin.price}} บาท</ion-label>\\n\\t\\t      <ion-radio slot=\\\"start\\\" value=\\\"{{listscoin.id}}\\\"></ion-radio>\\n\\t\\t    </ion-item>\\n\\t\\t  </ion-radio-group>\\n\\t\\t</ion-list>\\n\\t\\t<ion-grid>\\n\\t\\t\\t<ion-row>\\n\\t\\t\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t\\t<ion-text color=\\\"success\\\">\\n\\t\\t\\t\\t\\t\\t{{status_detail}}\\n\\t\\t\\t\\t\\t</ion-text>\\n\\t\\t\\t\\t</ion-col>\\n\\t\\t\\t</ion-row>\\n\\t\\t\\t<ion-row>\\n\\t\\t\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t\\t<ion-button expand=\\\"block\\\" color=\\\"theme\\\" type=\\\"submit\\\">ซื้อ</ion-button>\\n\\t\\t\\t\\t</ion-col>\\n\\t\\t\\t</ion-row>\\n\\t\\t</ion-grid>\\n\\t</div>\\n\\t</form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BuyServicePage } from './buy-service.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BuyServicePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BuyServicePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BuyServicePageRoutingModule } from './buy-service-routing.module';\n\nimport { BuyServicePage } from './buy-service.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BuyServicePageRoutingModule\n  ],\n  declarations: [BuyServicePage]\n})\nexport class BuyServicePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1eS1zZXJ2aWNlL2J1eS1zZXJ2aWNlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../rest-api.service';\nimport { Storage } from '@ionic/storage';\nimport { ActivatedRoute, Router } from '@angular/router';\n\ninterface databuy{\n  idcoin:any\n}\n\n@Component({\n  selector: 'app-buy-service',\n  templateUrl: './buy-service.page.html',\n  styleUrls: ['./buy-service.page.scss'],\n})\nexport class BuyServicePage implements OnInit {\n  listcoin:any;\n  buycoinid:any;\n  status_detail:any;\n  token:any;\n  public coin:databuy;\n  constructor(public api: RestApiService,private storage: Storage,public route: Router) {\n    this.api.getdata('buyService/listCoin').subscribe(\n      res=>{\n        this.listcoin = res;\n        // console.log(this.listcoin);\n      },\n      err=>{console.log(err);}\n    );\n    this.coin = {\n      idcoin:''\n    }\n  }\n\n  ngOnInit() {\n  }\n  buycoin(form:any){\n    this.storage.get('token').then((data)=>{\n      this.token = data;\n      this.api.getdata('buyService/buyCoin&token='+this.token+'&id='+form.value.idcoin).subscribe(\n        res=>{\n          console.log(res);\n        },err=>{\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  // async buycoin(idcoin:any) {\n  //   this.api.getdata('buyService/buyCoin&id='+idcoin).subscribe(\n  //     res=>{\n  //       this.buycoinid = res;\n  //       if(this.buycoinid.result == 'success'){\n  //         this.status_detail = this.buycoinid.result;\n  //       }\n  //     },err=>{\n  //       console.log(err);\n  //     }\n  //   );\n  // }\n}\n"]}